<% 
const componentName = args.name.split("/").pop(); 
const contextsDir = (args.contexts || "src/contexts");
-%>
---
to: "<%=contextsDir %>/<%=args.name %>/<%=componentName %>.js"
overwrite: true
---
import React, { Component } from "react";

import propTypes from "./<%=componentName %>.props.js";
import { createHoc } from "react-utils/utils";

const { Provider, Consumer } = React.createContext();

class <%=componentName %>Provider extends Component {
    static propTypes = propTypes;

    state = {

    }

    render = () => (
        <Provider value={this.state}>
            {this.props.children}
        </Provider>
    );
}

const with<%=componentName %> = createHoc(Consumer, "<%=componentName.toLowerCase() %>");

export { <%=componentName %>Provider, with<%=componentName %> };
export const <%=componentName %>Consumer = Consumer;