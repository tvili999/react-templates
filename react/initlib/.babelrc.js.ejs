<% 
const path = require("path");
const fs = require("fs");
const packageJsonPath = path.resolve(projectRoot, "package.json");
let packageJson = {
    "name": path.dirname(projectRoot),
    "version": "1.0.0",
    "license": "MIT"
};
if(fs.existsSync(packageJsonPath))
    packageJson = JSON.parse(fs.readFileSync(packageJsonPath));
-%>
---
to: .babelrc.js
overwrite: true
---
module.exports = api => ({
    presets: [
        "@babel/preset-env",
        "@babel/preset-react"
    ],
    plugins: [
        ...(api.env('test') ? [
            ["babel-plugin-auto-import", {
                declarations: [
                    { "default": ["regeneratorRuntime"], path: "regenerator-runtime/runtime" }
                ]
            }]
        ] : []),
        ["babel-plugin-module-resolver", {
            "root": "./",
            "alias": {
                "<%=packageJson.name %>": "./src"
            }
        }],
        ["@babel/plugin-proposal-decorators", { "decoratorsBeforeExport": true }],
        "@babel/plugin-proposal-do-expressions",
        ["@babel/plugin-proposal-pipeline-operator", { "proposal": "smart" }],
        "babel-plugin-styled-components"
    ],
    "sourceMaps": "inline"
});
