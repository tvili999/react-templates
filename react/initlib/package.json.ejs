<%
const path = require("path");
const fs = require("fs");
const childProcess = require("child_process");

const packageJsonPath = path.resolve(projectRoot, "package.json");
let packageJson = {
    "name": path.dirname(projectRoot),
    "version": "1.0.0",
    "license": "MIT"
};
if(fs.existsSync(packageJsonPath))
    packageJson = JSON.parse(fs.readFileSync(packageJsonPath));

packageJson.exports = {
    ...(packageJson.exports || {}),
    "./": "./dist/"
};

packageJson.jest = {
    ...(packageJson.jest || {}),
    "roots": [
        ...new Set([
            "./src",
            ...(packageJson.jest?.roots || [])
        ])
    ]
}

packageJson.scripts = {
    ...(packageJson.scripts || {}),
    "start": "babel -d dist -w src",
    "build": "babel -d dist src",
    "test": "test=1 jest",
    "test:watch": "test=1 jest --watch",
}

packageJson.peerDependencies = {
    ...(packageJson.peerDependencies || {}),
    "react": "^17.0.2",
    "prop-types": "^15.7.2"
}

packageJson.dependencies = {
    ...(packageJson.dependencies || {}),
    "styled-components": "^5.3.0"
}

packageJson.devDependencies = {
    ...(packageJson.devDependencies || {}),
    "babel-eslint": "^10.1.0",
    "prop-types": "^15.7.2",
    "eslint": "^7.29.0",
    "eslint-plugin-react": "^7.24.0",
    "babel-jest": "^27.0.6",
    "jest": "^27.0.6",
    "react-test-renderer": "^17.0.2",
    "@babel/cli": "^7.14.5",
    "@babel/core": "^7.14.6",
    "@babel/plugin-proposal-decorators": "^7.14.5",
    "@babel/plugin-proposal-do-expressions": "^7.14.5",
    "@babel/plugin-proposal-pipeline-operator": "^7.14.5",
    "@babel/preset-env": "^7.14.5",
    "@babel/preset-react": "^7.14.5",
    "babel-plugin-module-resolver": "^4.1.0",
    "babel-plugin-styled-components": "^1.12.0",
    "babel-plugin-auto-import": "^1.1.0"
}

addHook("afterCreate", () => {
    childProcess.exec("yarn");
})
%>
---
to: package.json
overwrite: true
---
<%- JSON.stringify(packageJson, null, 4) %>