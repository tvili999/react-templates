<% 
const componentsDir = (args.components || "src/components");
const contextsDir = (args.contexts || "src/contexts");
const aliases = args.aliases || {
    "core": "src/core",
    "components": componentsDir,
    "contexts": contextsDir
}
-%>
---
to: webpack.config.js
overwrite: true
---
const path = require("path");
const HtmlPlugin = require("html-webpack-plugin");
const CircularDependencyPlugin = require('circular-dependency-plugin')
const MiniCss = require("mini-css-extract-plugin");
const Visualizer = require("webpack-visualizer-plugin");

let config = {
	stats: { children: false },
	node: {
		fs: 'empty'
	},
	entry: {
		app: ["core-js/stable", "./src/index.js"]
	},
	output: {
		publicPath: "/",
		filename: "[name].js",
        chunkFilename: '[name].[chunkhash].js',
    	path: path.resolve(__dirname, "build") // eslint-disable-line
	},
	resolve: {
		extensions: [".js", ".jsx"],
		modules: ["node_modules", "src"],
		alias: {
        <%_ for(let name in aliases) { -%>
			"<%=name %>": path.resolve(__dirname, "<%= aliases[name]%>"), // eslint-disable-line
        <%_ } -%>
		}
	},
	devtool: "source-map",
	module: {
		rules: [
			{
				test: /\.jsx?$/,
				exclude: /node_modules/,
				use: "babel-loader"
			},
			{
				test: /\.css$/,
				use: [
						MiniCss.loader,
						"css-loader"
					]
			},
			{
				test: /\.styl$/,
				use: [
						MiniCss.loader,
						{
							loader: "css-loader",
							options: {
								importLoaders: 1
							}
						},
						{
							loader: "stylus-loader",
						}
					]
			},
			{
				test: /\.(jpe?g|png|svg)$/,
				use: "url-loader"
			},
			{
				test: /\.(woff|woff2|eot|ttf|otf)$/,
				use: 'file-loader'
			}
		]
	},
	plugins: [
		new CircularDependencyPlugin({
			exclude: /node_modules/,

			failOnError: true
		}),
		new MiniCss({
			filename: "[name].css",
			chunkFilename: "[id].css",
			ignoreOrder: true
		}),
		new HtmlPlugin({ template: "./src/index.html" }),
		new Visualizer()
	],
	devServer: {
		host: "0.0.0.0",
//		stats: "errors-only",
		contentBase: path.join(__dirname, "build"), // eslint-disable-line
		port: 8080,
		historyApiFallback: true,
	},
	mode: "development"
};

module.exports = config;
