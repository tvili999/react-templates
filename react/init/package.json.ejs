<%
const path = require("path");
const fs = require("fs");
const childProcess = require("child_process");

const packageJsonPath = path.resolve(projectRoot, "package.json");
let packageJson = {
    "name": path.dirname(projectRoot),
    "version": "1.0.0",
    "license": "MIT"
};
if(fs.existsSync(packageJsonPath))
    packageJson = JSON.parse(fs.readFileSync(packageJsonPath));

packageJson.scripts = {
    ...(packageJson.scripts || {}),
    "start": "webpack serve --env dev",
    "build": "webpack",
    "build:watch": "webpack -w"
}

packageJson.dependencies = {
    ...(packageJson.dependencies || {}),
    "classnames": "^2.3.1",
    "core-js": "^3.14.0",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "regenerator-runtime": "^0.13.7"
}

packageJson.devDependencies = {
    ...(packageJson.devDependencies || {}),
    "@babel/core": "^7.14.6",
    "@babel/plugin-proposal-decorators": "^7.14.5",
    "@babel/plugin-proposal-do-expressions": "^7.14.5",
    "@babel/plugin-proposal-pipeline-operator": "^7.14.5",
    "@babel/preset-env": "^7.14.5",
    "@babel/preset-react": "^7.14.5",
    "babel-eslint": "^10.1.0",
    "babel-loader": "^8.2.2",
    "circular-dependency-plugin": "^5.2.2",
    "css-loader": "^5.2.6",
    "eslint": "^7.29.0",
    "eslint-plugin-react": "^7.24.0",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.3.1",
    "mini-css-extract-plugin": "^1.6.0",
    "postcss": "^8.3.5",
    "postcss-loader": "^6.1.0",
    "postcss-preset-env": "^6.7.0",
    "style-loader": "^2.0.0",
    "stylus": "^0.54.8",
    "stylus-loader": "^6.1.0",
    "webpack": "^5.39.1",
    "webpack-cli": "^4.7.2",
    "webpack-dev-server": "^3.11.2"
}


addHook("afterCreate", () => {
    childProcess.exec("yarn");
})
%>
---
to: package.json
overwrite: true
---
<%- JSON.stringify(packageJson, null, 4) %>